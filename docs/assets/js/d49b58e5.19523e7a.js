"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[222],{83866:e=>{e.exports=JSON.parse('{"functions":[{"name":"ObserveActivePlayers","desc":"Calls observer for current active players and whenever a player is added to the active players list.","params":[{"name":"observer","desc":"The function to call when a player is added to the active players list.","lua_type":"(player: Player) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","realm":["Server"],"source":{"line":38,"path":"src/init.lua"}},{"name":"OnActivePlayerRemoved","desc":"Calls listener whenever a player is removed from the active players list.","params":[{"name":"listener","desc":"The function to call when a player is removed from the active players list.","lua_type":"(player: Player) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","realm":["Server"],"source":{"line":55,"path":"src/init.lua"}},{"name":"RegisterToken","desc":"Creates a new ReplicaToken.","params":[{"name":"name","desc":"The name of the ReplicaToken.","lua_type":"string"}],"returns":[{"desc":"The ReplicaToken.","lua_type":"ReplicaToken"}],"function_type":"method","realm":["Server"],"source":{"line":72,"path":"src/init.lua"}},{"name":"NewReplica","desc":"Creates a new Replica.","params":[{"name":"props","desc":"The properties to create the Replica with.","lua_type":"ReplicaProps"}],"returns":[{"desc":"The Replica.","lua_type":"Replica"}],"function_type":"method","realm":["Server"],"source":{"line":89,"path":"src/init.lua"}},{"name":"RequestData","desc":"Requests the initial data from the server.","params":[],"returns":[],"function_type":"method","realm":["Client"],"source":{"line":107,"path":"src/init.lua"}},{"name":"OnNewReplica","desc":"Calls listener when a new Replica is created.","params":[{"name":"listener","desc":"Callback function","lua_type":"(replica: Replica) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","realm":["Client"],"source":{"line":124,"path":"src/init.lua"}},{"name":"OnNewReplicaWithToken","desc":"Calls listener when a new Replica with the specified token is created.","params":[{"name":"token","desc":"Replica token name","lua_type":"string"},{"name":"listener","desc":"Callback function","lua_type":"(replica: Replica) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","realm":["Client"],"source":{"line":142,"path":"src/init.lua"}},{"name":"OnInitialDataReceived","desc":"Calls listener when the initial data has been received from the server.","params":[{"name":"listener","desc":"Callback function","lua_type":"() -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","realm":["Client"],"source":{"line":159,"path":"src/init.lua"}},{"name":"GetReplicaById","desc":"Returns the Replica with the specified id.","params":[{"name":"id","desc":"Replica id","lua_type":"string"}],"returns":[{"desc":"Replica","lua_type":"Replica?"}],"function_type":"method","realm":["Client","Server"],"source":{"line":181,"path":"src/init.lua"}}],"properties":[],"types":[{"name":"ReplicaProps","desc":"","fields":[{"name":"Token","lua_type":"ReplicaToken","desc":"The ReplicaToken to create the Replica with."},{"name":"Tags","lua_type":"{ [string]: any }?","desc":"The tags to create the Replica with. Default: {}"},{"name":"Data","lua_type":"{ [string]: any }?","desc":"The data to create the Replica with. Default: {}"},{"name":"Filter","lua_type":"FilterName?","desc":"The filter type to create the Replica with. Default: \\"All\\""},{"name":"FilterList","lua_type":"{ [Player]: true }?","desc":"The filter list to create the Replica with. Default: {}"},{"name":"Parent","lua_type":"Replica?","desc":"The parent to create the Replica with. Default: nil"},{"name":"WriteLib","lua_type":"any?","desc":"The write library to create the Replica with. Default: nil"}],"source":{"line":984,"path":"src/ReplicaService.lua"}}],"name":"ReplicaModule","desc":"Module that contains the Replica API.","source":{"line":16,"path":"src/init.lua"}}')}}]);