"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[483],{84828:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new Replica.","params":[],"returns":[],"function_type":"static","ignore":true,"source":{"line":390,"path":"src/ReplicaService.lua"}},{"name":"IsActive","desc":"Returns whether the Replica is active or not.","params":[],"returns":[{"desc":"Whether the Replica is active or not.","lua_type":"boolean"}],"function_type":"method","tags":["Shared"],"source":{"line":456,"path":"src/ReplicaService.lua"}},{"name":"Identify","desc":"Returns a string that identifies the Replica.","params":[],"returns":[{"desc":"A string that identifies the Replica.","lua_type":"string"}],"function_type":"method","tags":["Shared"],"source":{"line":469,"path":"src/ReplicaService.lua"}},{"name":"GetToken","desc":"Returns the Replica\'s Token name.","params":[],"returns":[{"desc":"The name of the ReplicaToken used to create the Replica.","lua_type":"string"}],"function_type":"method","tags":["Shared"],"source":{"line":482,"path":"src/ReplicaService.lua"}},{"name":"GetParent","desc":"Returns the Replica\'s parent.","params":[],"returns":[{"desc":"The Replica\'s parent. If nil, the Replica is a root Replica.","lua_type":"Replica?"}],"function_type":"method","tags":["Shared"],"source":{"line":495,"path":"src/ReplicaService.lua"}},{"name":"GetChildren","desc":"Returns the Replica\'s children.","params":[],"returns":[{"desc":"A list of the Replica\'s children.","lua_type":"{ [Replica]: true }"}],"function_type":"method","tags":["Shared"],"source":{"line":508,"path":"src/ReplicaService.lua"}},{"name":"SetValue","desc":"Sets a value at a path.","params":[{"name":"path","desc":"The path to set the value at.","lua_type":"Path"},{"name":"value","desc":"The value to set.","lua_type":"any"},{"name":"inclusion","desc":"Overrides the Replica\'s filtering settings for this call.","lua_type":"{ [Player]: boolean }?"}],"returns":[],"function_type":"method","tags":["Shared"],"source":{"line":523,"path":"src/ReplicaService.lua"}},{"name":"SetValues","desc":"Sets multiple values at a path.","params":[{"name":"path","desc":"The path to set the values at.","lua_type":"Path"},{"name":"values","desc":"The values to set.","lua_type":"{ [PathIndex]: any }"},{"name":"inclusion","desc":"Overrides the Replica\'s filtering settings for this call.","lua_type":"{ [Player]: boolean }?"}],"returns":[],"function_type":"method","tags":["Shared"],"source":{"line":539,"path":"src/ReplicaService.lua"}},{"name":"ArrayInsert","desc":"Inserts a value into an array at a path.","params":[{"name":"path","desc":"The path to insert the value at.","lua_type":"Path"},{"name":"value","desc":"The value to insert.","lua_type":"any"},{"name":"index","desc":"The index to insert the value at. If nil, the value will be inserted at the end of the array.","lua_type":"number?"},{"name":"inclusion","desc":"Overrides the Replica\'s filtering settings for this call.","lua_type":"{ [Player]: boolean }?"}],"returns":[],"function_type":"method","tags":["Shared"],"source":{"line":556,"path":"src/ReplicaService.lua"}},{"name":"ArraySet","desc":"Sets a value in an array at a path.","params":[{"name":"path","desc":"The path to set the value at.","lua_type":"Path"},{"name":"index","desc":"The index to set the value at.","lua_type":"number"},{"name":"value","desc":"The value to set.","lua_type":"any"},{"name":"inclusion","desc":"Overrides the Replica\'s filtering settings for this call.","lua_type":"{ [Player]: boolean }?"}],"returns":[],"function_type":"method","tags":["Shared"],"source":{"line":573,"path":"src/ReplicaService.lua"}},{"name":"ArrayRemove","desc":"Removes a value from an array at a path.","params":[{"name":"path","desc":"The path to remove the value from.","lua_type":"Path"},{"name":"index","desc":"The index to remove the value from.","lua_type":"number"},{"name":"inclusion","desc":"Overrides the Replica\'s filtering settings for this call.","lua_type":"{ [Player]: boolean }?"}],"returns":[],"function_type":"method","tags":["Shared"],"source":{"line":589,"path":"src/ReplicaService.lua"}},{"name":"OnChange","desc":"Listens for value changes at a path.","params":[{"name":"path","desc":"The path to listen for changes at.","lua_type":"Path?"},{"name":"listener","desc":"The function to call when the value at the path changes.","lua_type":"(new: any, old: any) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","tags":["Shared"],"source":{"line":605,"path":"src/ReplicaService.lua"}},{"name":"OnNewKey","desc":"Listens for new keys at a path.","params":[{"name":"path","desc":"The path to listen for new keys at. If nil, the listener will be called when a new key is added to the root Data table.","lua_type":"Path?"},{"name":"listener","desc":"The function to call when a new key is added to the path.","lua_type":"(key: any, value: any) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","tags":["Shared"],"source":{"line":620,"path":"src/ReplicaService.lua"}},{"name":"OnArrayInsert","desc":"Listens for array inserts at a path.","params":[{"name":"path","desc":"The path to listen for array inserts at.","lua_type":"Path?"},{"name":"listener","desc":"The function to call when a value is inserted into the array at the path.","lua_type":"(index: number, value: any) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","tags":["Shared"],"source":{"line":635,"path":"src/ReplicaService.lua"}},{"name":"OnArraySet","desc":"Listens for array sets at a path.","params":[{"name":"path","desc":"The path to listen for array sets at.","lua_type":"Path?"},{"name":"listener","desc":"The function to call when a value is set in the array at the path.","lua_type":"(index: number, value: any) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","tags":["Shared"],"source":{"line":650,"path":"src/ReplicaService.lua"}},{"name":"OnArrayRemove","desc":"Listens for array removes at a path.","params":[{"name":"path","desc":"The path to listen for array removes at.","lua_type":"Path?"},{"name":"listener","desc":"The function to call when a value is removed from the array at the path.","lua_type":"(index: number, value: any) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","tags":["Shared"],"source":{"line":665,"path":"src/ReplicaService.lua"}},{"name":"OnRawChange","desc":"Listens for raw changes at a path.","params":[{"name":"path","desc":"The path to listen for raw changes at.","lua_type":"Path?"},{"name":"listener","desc":"The function to call when a raw change occurs at the path.","lua_type":"(actionName: string, pathTable: PathTable, ...any) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","tags":["Shared"],"source":{"line":680,"path":"src/ReplicaService.lua"}},{"name":"OnChildAdded","desc":"Listens for child Replicas being added.","params":[{"name":"listener","desc":"The function to call when a child Replica is added.","lua_type":"(child: Replica) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","tags":["Shared"],"source":{"line":694,"path":"src/ReplicaService.lua"}},{"name":"OnChildRemoved","desc":"Listens for child Replicas being removed.","params":[{"name":"listener","desc":"The function to call when this Replica is destroyed.","lua_type":"(child: Replica) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","tags":["Shared"],"source":{"line":708,"path":"src/ReplicaService.lua"}},{"name":"_GetChildReplicaData","desc":"","params":[],"returns":[{"desc":"A table of child Replica data.","lua_type":"{ [string]: any }"}],"function_type":"method","realm":["Server"],"ignore":true,"source":{"line":728,"path":"src/ReplicaService.lua"}},{"name":"SetParent","desc":"Sets the parent of the Replica. Only works on root Replicas \\n(replicas with no initial parent.)","params":[{"name":"parent","desc":"The Replica to set as the parent.","lua_type":"Replica"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":742,"path":"src/ReplicaService.lua"}},{"name":"SetReplication","desc":"Sets the replication settings of the Replica.","params":[{"name":"settings","desc":"The settings to set the Replica\'s replication to.","lua_type":"FilterSettings"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":772,"path":"src/ReplicaService.lua"}},{"name":"AddToFilter","desc":"Adds a player to the Replica\'s filter list.","params":[{"name":"player","desc":"The player to add to the filter list.","lua_type":"Player"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":805,"path":"src/ReplicaService.lua"}},{"name":"RemoveFromFilter","desc":"Removes a player from the Replica\'s filter list.","params":[{"name":"player","desc":"The player to remove from the filter list.","lua_type":"Player"}],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":818,"path":"src/ReplicaService.lua"}},{"name":"Destroy","desc":"Destroys the Replica.","params":[],"returns":[],"function_type":"method","realm":["Server"],"source":{"line":829,"path":"src/ReplicaService.lua"}},{"name":"GetFilterList","desc":"Returns the Replica\'s filter list.","params":[],"returns":[{"desc":"A list of players that the Replica is filtered to.","lua_type":"{ [Player]: true }"}],"function_type":"method","realm":["Server"],"source":{"line":843,"path":"src/ReplicaService.lua"}},{"name":"GetFilter","desc":"Returns the Replica\'s filter.","params":[],"returns":[{"desc":"Type of filter the Replica is using","lua_type":"Filter"}],"function_type":"method","realm":["Server"],"source":{"line":856,"path":"src/ReplicaService.lua"}}],"properties":[{"name":"Id","desc":"The Replica\'s unique identifier.","lua_type":"string","tags":["Shared"],"readonly":true,"source":{"line":69,"path":"src/ReplicaService.lua"}},{"name":"Tags","desc":"The Replica\'s tags.","lua_type":"{ [string]: any }","tags":["Shared"],"source":{"line":76,"path":"src/ReplicaService.lua"}},{"name":"Data","desc":"The Replica\'s data.","lua_type":"{ [string]: any }","tags":["Shared"],"source":{"line":83,"path":"src/ReplicaService.lua"}}],"types":[{"name":"PathTable","desc":"","lua_type":"{string | number}","source":{"line":11,"path":"src/Common.lua"}},{"name":"Path","desc":"","lua_type":"string | PathTable","source":{"line":15,"path":"src/Common.lua"}},{"name":"PathIndex","desc":"","lua_type":"string | number","source":{"line":19,"path":"src/Common.lua"}},{"name":"FilterSettings","desc":"","fields":[{"name":"filter","lua_type":"FilterName?","desc":"The name of the Filter to set. If nil, the filter will not be changed."},{"name":"players","lua_type":"{ [Player]: true }?","desc":"List of players added to the filter list. If nil, the filter list will not be changed."}],"source":{"line":89,"path":"src/ReplicaService.lua"}},{"name":"FilterName","desc":"","lua_type":"\\"All\\" | \\"Include\\" | \\"Exclude\\"","source":{"line":93,"path":"src/ReplicaService.lua"}},{"name":"FilterList","desc":"","lua_type":"{ [Player]: true }","source":{"line":97,"path":"src/ReplicaService.lua"}}],"name":"Replica","desc":"An object that can be replicated to clients.","source":{"line":61,"path":"src/ReplicaService.lua"}}')}}]);