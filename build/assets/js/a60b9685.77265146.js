"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[954],{28832:e=>{e.exports=JSON.parse('{"functions":[{"name":"RequestData","desc":"Requests the initial data from the server.","params":[],"returns":[],"function_type":"method","source":{"line":363,"path":"src/ReplicaController.lua"}},{"name":"OnNewReplica","desc":"Calls listener when a new Replica is created.","params":[{"name":"listener","desc":"Callback function","lua_type":"(replica: Replica) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","source":{"line":387,"path":"src/ReplicaController.lua"}},{"name":"OnNewReplicaWithToken","desc":"Calls listener when a new Replica with the specified token is created.","params":[{"name":"token","desc":"Replica token name","lua_type":"string"},{"name":"listener","desc":"Callback function","lua_type":"(replica: Replica) -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","source":{"line":404,"path":"src/ReplicaController.lua"}},{"name":"OnInitialDataReceived","desc":"Calls listener when the initial data has been received from the server.","params":[{"name":"listener","desc":"Callback function","lua_type":"() -> ()"}],"returns":[{"desc":"Signal Connection","lua_type":"Connection"}],"function_type":"method","source":{"line":420,"path":"src/ReplicaController.lua"}},{"name":"GetReplicaById","desc":"Returns the Replica with the specified id.","params":[{"name":"id","desc":"Replica id","lua_type":"string"}],"returns":[{"desc":"Replica","lua_type":"Replica?"}],"function_type":"method","source":{"line":441,"path":"src/ReplicaController.lua"}}],"properties":[],"types":[],"name":"ReplicaController","desc":"Manages the replication of Replicas to clients.","realm":["Client"],"source":{"line":331,"path":"src/ReplicaController.lua"}}')}}]);